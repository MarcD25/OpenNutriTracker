// Mocks generated by Mockito 5.4.4 from annotations
// in opennutritracker/test/unit_test/core/domain/usecase/get_kcal_goal_usecase_enhanced_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:opennutritracker/core/data/data_source/user_activity_dbo.dart'
    as _i12;
import 'package:opennutritracker/core/data/dbo/config_dbo.dart' as _i5;
import 'package:opennutritracker/core/data/dbo/user_dbo.dart' as _i3;
import 'package:opennutritracker/core/data/repository/config_repository.dart'
    as _i8;
import 'package:opennutritracker/core/data/repository/user_activity_repository.dart'
    as _i10;
import 'package:opennutritracker/core/data/repository/user_repository.dart'
    as _i6;
import 'package:opennutritracker/core/domain/entity/app_theme_entity.dart'
    as _i9;
import 'package:opennutritracker/core/domain/entity/config_entity.dart' as _i4;
import 'package:opennutritracker/core/domain/entity/user_activity_entity.dart'
    as _i11;
import 'package:opennutritracker/core/domain/entity/user_entity.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserEntity_0 extends _i1.SmartFake implements _i2.UserEntity {
  _FakeUserEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDBO_1 extends _i1.SmartFake implements _i3.UserDBO {
  _FakeUserDBO_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfigEntity_2 extends _i1.SmartFake implements _i4.ConfigEntity {
  _FakeConfigEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfigDBO_3 extends _i1.SmartFake implements _i5.ConfigDBO {
  _FakeConfigDBO_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i6.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> updateUserData(_i2.UserEntity? userEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserData,
          [userEntity],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> hasUserData() => (super.noSuchMethod(
        Invocation.method(
          #hasUserData,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.UserEntity> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i7.Future<_i2.UserEntity>.value(_FakeUserEntity_0(
          this,
          Invocation.method(
            #getUserData,
            [],
          ),
        )),
      ) as _i7.Future<_i2.UserEntity>);

  @override
  _i7.Future<_i3.UserDBO> getUserDBO() => (super.noSuchMethod(
        Invocation.method(
          #getUserDBO,
          [],
        ),
        returnValue: _i7.Future<_i3.UserDBO>.value(_FakeUserDBO_1(
          this,
          Invocation.method(
            #getUserDBO,
            [],
          ),
        )),
      ) as _i7.Future<_i3.UserDBO>);
}

/// A class which mocks [ConfigRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigRepository extends _i1.Mock implements _i8.ConfigRepository {
  MockConfigRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> updateConfig(_i4.ConfigEntity? configEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConfig,
          [configEntity],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setConfigDisclaimer(bool? hasAcceptedDisclaimer) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigDisclaimer,
          [hasAcceptedDisclaimer],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setConfigHasAcceptedAnonymousData(
          bool? hasAcceptedAnonymousData) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigHasAcceptedAnonymousData,
          [hasAcceptedAnonymousData],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> getConfigHasAcceptedAnonymousData() => (super.noSuchMethod(
        Invocation.method(
          #getConfigHasAcceptedAnonymousData,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i9.AppThemeEntity> getConfigAppTheme() => (super.noSuchMethod(
        Invocation.method(
          #getConfigAppTheme,
          [],
        ),
        returnValue:
            _i7.Future<_i9.AppThemeEntity>.value(_i9.AppThemeEntity.light),
      ) as _i7.Future<_i9.AppThemeEntity>);

  @override
  _i7.Future<void> setConfigAppTheme(_i9.AppThemeEntity? appTheme) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigAppTheme,
          [appTheme],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.ConfigEntity> getConfig() => (super.noSuchMethod(
        Invocation.method(
          #getConfig,
          [],
        ),
        returnValue: _i7.Future<_i4.ConfigEntity>.value(_FakeConfigEntity_2(
          this,
          Invocation.method(
            #getConfig,
            [],
          ),
        )),
      ) as _i7.Future<_i4.ConfigEntity>);

  @override
  _i7.Future<_i5.ConfigDBO> getConfigDBO() => (super.noSuchMethod(
        Invocation.method(
          #getConfigDBO,
          [],
        ),
        returnValue: _i7.Future<_i5.ConfigDBO>.value(_FakeConfigDBO_3(
          this,
          Invocation.method(
            #getConfigDBO,
            [],
          ),
        )),
      ) as _i7.Future<_i5.ConfigDBO>);

  @override
  _i7.Future<void> setConfigUsesImperialUnits(bool? usesImperialUnits) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigUsesImperialUnits,
          [usesImperialUnits],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<double> getConfigKcalAdjustment() => (super.noSuchMethod(
        Invocation.method(
          #getConfigKcalAdjustment,
          [],
        ),
        returnValue: _i7.Future<double>.value(0.0),
      ) as _i7.Future<double>);

  @override
  _i7.Future<void> setConfigKcalAdjustment(double? kcalAdjustment) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigKcalAdjustment,
          [kcalAdjustment],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setUserMacroPct(
    double? carbs,
    double? protein,
    double? fat,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserMacroPct,
          [
            carbs,
            protein,
            fat,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [UserActivityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserActivityRepository extends _i1.Mock
    implements _i10.UserActivityRepository {
  MockUserActivityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> addUserActivity(_i11.UserActivityEntity? activityEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserActivity,
          [activityEntity],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addAllUserActivityDBOs(
          List<_i12.UserActivityDBO>? userActivityDBOs) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAllUserActivityDBOs,
          [userActivityDBOs],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteUserActivity(
          _i11.UserActivityEntity? userActivityEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUserActivity,
          [userActivityEntity],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i12.UserActivityDBO>> getAllUserActivityDBO() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUserActivityDBO,
          [],
        ),
        returnValue: _i7.Future<List<_i12.UserActivityDBO>>.value(
            <_i12.UserActivityDBO>[]),
      ) as _i7.Future<List<_i12.UserActivityDBO>>);

  @override
  _i7.Future<List<_i11.UserActivityEntity>> getAllUserActivityByDate(
          DateTime? dateTime) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUserActivityByDate,
          [dateTime],
        ),
        returnValue: _i7.Future<List<_i11.UserActivityEntity>>.value(
            <_i11.UserActivityEntity>[]),
      ) as _i7.Future<List<_i11.UserActivityEntity>>);

  @override
  _i7.Future<List<_i11.UserActivityEntity>> getRecentUserActivity() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentUserActivity,
          [],
        ),
        returnValue: _i7.Future<List<_i11.UserActivityEntity>>.value(
            <_i11.UserActivityEntity>[]),
      ) as _i7.Future<List<_i11.UserActivityEntity>>);
}
