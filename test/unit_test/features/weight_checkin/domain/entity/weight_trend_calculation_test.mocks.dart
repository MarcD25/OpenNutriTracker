// Mocks generated by Mockito 5.4.4 from annotations
// in opennutritracker/test/unit_test/features/weight_checkin/domain/entity/weight_trend_calculation_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:opennutritracker/features/weight_checkin/data/data_source/weight_checkin_data_source.dart'
    as _i2;
import 'package:opennutritracker/features/weight_checkin/data/dbo/weight_entry_dbo.dart'
    as _i4;
import 'package:opennutritracker/features/weight_checkin/domain/entity/weight_entry_entity.dart'
    as _i5;
import 'package:opennutritracker/features/weight_checkin/domain/service/weight_checkin_notification_service.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WeightCheckinDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeightCheckinDataSource extends _i1.Mock
    implements _i2.WeightCheckinDataSource {
  MockWeightCheckinDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveWeightEntry(_i4.WeightEntryDBO? weightEntry) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWeightEntry,
          [weightEntry],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.WeightEntryDBO>> getWeightHistory({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeightHistory,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i3.Future<List<_i4.WeightEntryDBO>>.value(
            <_i4.WeightEntryDBO>[]),
      ) as _i3.Future<List<_i4.WeightEntryDBO>>);

  @override
  _i3.Future<_i4.WeightEntryDBO?> getLatestWeightEntry() => (super.noSuchMethod(
        Invocation.method(
          #getLatestWeightEntry,
          [],
        ),
        returnValue: _i3.Future<_i4.WeightEntryDBO?>.value(),
      ) as _i3.Future<_i4.WeightEntryDBO?>);

  @override
  _i3.Future<void> setCheckinFrequency(_i5.CheckinFrequency? frequency) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCheckinFrequency,
          [frequency],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i5.CheckinFrequency> getCheckinFrequency() => (super.noSuchMethod(
        Invocation.method(
          #getCheckinFrequency,
          [],
        ),
        returnValue: _i3.Future<_i5.CheckinFrequency>.value(
            _i5.CheckinFrequency.weekly),
      ) as _i3.Future<_i5.CheckinFrequency>);

  @override
  _i3.Future<DateTime?> getNextCheckinDate() => (super.noSuchMethod(
        Invocation.method(
          #getNextCheckinDate,
          [],
        ),
        returnValue: _i3.Future<DateTime?>.value(),
      ) as _i3.Future<DateTime?>);
}

/// A class which mocks [WeightCheckinNotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeightCheckinNotificationService extends _i1.Mock
    implements _i6.WeightCheckinNotificationService {
  MockWeightCheckinNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> scheduleWeightCheckinReminder(DateTime? nextCheckinDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleWeightCheckinReminder,
          [nextCheckinDate],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancelWeightCheckinReminder() => (super.noSuchMethod(
        Invocation.method(
          #cancelWeightCheckinReminder,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> requestNotificationPermissions() => (super.noSuchMethod(
        Invocation.method(
          #requestNotificationPermissions,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> areNotificationsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #areNotificationsEnabled,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}